# Spring Profile Configuration
spring.profiles.active=${SPRING_PROFILES_ACTIVE:prod}

# ===========================================
# DATABASE CONFIGURATION
# ===========================================
# Database configuration is profile-specific
# See application-dev.properties for H2 (development)
# See application-prod.properties for PostgreSQL (production)
spring.datasource.url=${DATABASE_URL:jdbc:h2:mem:kuberfashion_default}
spring.datasource.username=${DATABASE_USERNAME:sa}
spring.datasource.password=${DATABASE_PASSWORD:}
spring.datasource.driver-class-name=${DATABASE_DRIVER:org.h2.Driver}

# Connection Pool Configuration (HikariCP)
spring.datasource.hikari.pool-name=KuberFashionPool
spring.datasource.hikari.maximum-pool-size=${DATABASE_POOL_SIZE:10}
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.max-lifetime=${DATABASE_MAX_LIFETIME:600000}
spring.datasource.hikari.connection-timeout=${DATABASE_CONNECTION_TIMEOUT:30000}
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.leak-detection-threshold=60000
spring.datasource.hikari.connection-test-query=SELECT 1

# ===========================================
# JPA/HIBERNATE CONFIGURATION
# ===========================================
spring.jpa.hibernate.ddl-auto=${HIBERNATE_DDL_AUTO:update}
spring.jpa.properties.hibernate.dialect=${HIBERNATE_DIALECT:org.hibernate.dialect.H2Dialect}
spring.jpa.properties.hibernate.format_sql=${HIBERNATE_FORMAT_SQL:false}
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.jdbc.time_zone=UTC
spring.jpa.open-in-view=false

# ===========================================
# JWT CONFIGURATION
# ===========================================
jwt.secret=${JWT_SECRET:u5PS40PD1gBpFFAgD7ugXd6k9klL+h9YZMv3gIjKH3Nof/qaJf2rPbr0wrwwe6WaDfq7q3JOjwdBF/6AaKz7sQ==}
jwt.expiration=${JWT_EXPIRATION:604800000}

# ===========================================
# CORS CONFIGURATION
# ===========================================
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://127.0.0.1:3000,http://localhost:5173,http://127.0.0.1:5173}

# ===========================================
# FILE UPLOAD CONFIGURATION
# ===========================================
spring.servlet.multipart.max-file-size=${MAX_FILE_SIZE:10MB}
spring.servlet.multipart.max-request-size=${MAX_REQUEST_SIZE:10MB}

# ===========================================
# LOGGING CONFIGURATION
# ===========================================
logging.level.root=${LOGGING_LEVEL_ROOT:INFO}
logging.level.com.kuberfashion.backend=${LOGGING_LEVEL_KUBERFASHION:INFO}
logging.level.org.springframework.security=${LOGGING_LEVEL_SECURITY:WARN}
logging.level.org.springframework.web=WARN
logging.level.org.hibernate.SQL=${LOGGING_LEVEL_SQL:WARN}
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN

# Custom logging pattern for better readability
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} %highlight(%-5level) [%thread] %cyan(%logger{36}) - %msg%n

# ===========================================
# SERVER CONFIGURATION
# ===========================================
server.port=${SERVER_PORT:8080}
server.error.include-message=always
server.error.include-binding-errors=always

# ===========================================
# ACTUATOR/HEALTH CHECK CONFIGURATION
# ===========================================
management.endpoints.web.exposure.include=${MANAGEMENT_ENDPOINTS_ENABLED:health,info}
management.endpoint.health.show-details=when-authorized
management.health.db.enabled=true

# ===========================================
# CACHE CONFIGURATION
# ===========================================
# Cache type: redis (preferred) or simple (fallback)
spring.cache.type=${CACHE_TYPE:simple}

# Redis Configuration (when available)
spring.data.redis.host=${REDIS_HOST:localhost}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.password=${REDIS_PASSWORD:}
# Default TTL for caches (10 minutes)
spring.cache.redis.time-to-live=PT10M
# Optional: key prefix for namespacing
spring.cache.redis.key-prefix=kf:
spring.cache.redis.use-key-prefix=true

# Simple Cache Configuration (fallback)
spring.cache.cache-names=products,products_list